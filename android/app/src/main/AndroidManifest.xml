<manifest xmlns:android="http://schemas.android.com/apk/res/android"
  xmlns:tools="http://schemas.android.com/tools"
  package="ja.burhanrashid52.whattodo">

  <!-- The INTERNET permission is required for development. Specifically,
       flutter needs it to communicate with the running application
       to allow setting breakpoints, to provide hot reload, etc.
  -->
  <uses-permission android:name="android.permission.INTERNET"/>
  <uses-permission android:name="android.permission.RECEIVE_BOOT_COMPLETED"/>
  <uses-permission android:name="android.permission.WAKE_LOCK"/>
  <uses-permission android:name="android.permission.VIBRATE"/>
  <uses-permission android:name="android.permission.USE_FULL_SCREEN_INTENT"/>
  <uses-permission android:name="android.permission.SCHEDULE_EXACT_ALARM"/>
  <uses-permission android:name="android.permission.POST_NOTIFICATIONS"/>

  <!-- Storage permissions for import/export feature -->
  <!-- For Android 12 (API level 32) and below -->
  <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" android:maxSdkVersion="32" />
  <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" android:maxSdkVersion="32" />

  <!-- For Android 13+ (API level 33+) -->
  <uses-permission android:name="android.permission.READ_MEDIA_IMAGES" />
  <uses-permission android:name="android.permission.READ_MEDIA_VIDEO" />
  <uses-permission android:name="android.permission.READ_MEDIA_AUDIO" />

  <!-- For Android 11+ (API level 30+) to request all files access -->
  <uses-permission android:name="android.permission.MANAGE_EXTERNAL_STORAGE" />

  <queries>
    <intent>
      <action android:name="android.intent.action.VIEW" />
      <data android:scheme="https" />
    </intent>

    <intent>
      <action android:name="android.intent.action.VIEW" />
      <data android:scheme="mailto"/>
    </intent>
  </queries>

  <!-- io.flutter.app.FlutterApplication is an android.app.Application that
       calls FlutterMain.startInitialization(this); in its onCreate method.
       In most cases you can leave this as-is, but you if you want to provide
       additional functionality it is fine to subclass or reimplement
       FlutterApplication and put your custom class here. -->
  <application
    android:icon="@mipmap/ic_launcher"
    android:label="what_todo">
    <activity
      android:name=".MainActivity"
      android:exported="true"
      android:configChanges="orientation|keyboardHidden|keyboard|screenSize|locale|layoutDirection|fontScale"
      android:hardwareAccelerated="true"
      android:launchMode="singleTop"
      android:theme="@style/LaunchTheme"
      android:windowSoftInputMode="adjustResize">
      <!-- This keeps the window background of the activity showing
           until Flutter renders its first frame. It can be removed if
           there is no splash screen (such as the default splash screen
           defined in @style/LaunchTheme). -->
      <intent-filter>
        <action android:name="android.intent.action.MAIN"/>
        <category android:name="android.intent.category.LAUNCHER"/>
      </intent-filter>
    </activity>
    <activity
      android:name="com.yalantis.ucrop.UCropActivity"
      android:screenOrientation="portrait"
      android:theme="@style/Theme.AppCompat.Light.NoActionBar"/>
    <meta-data
      android:name="flutterEmbedding"
      android:value="2"/>
    <service android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmService"
      android:permission="android.permission.BIND_JOB_SERVICE"
      android:exported="false"/>
    <receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.AlarmBroadcastReceiver"
      android:exported="false"/>
    <receiver
      android:name="dev.fluttercommunity.plus.androidalarmmanager.RebootBroadcastReceiver"
      android:enabled="false"
      android:exported="false">
      <intent-filter>
        <action android:name="android.intent.action.BOOT_COMPLETED"/>
      </intent-filter>
    </receiver>
    <receiver android:exported="false" android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationReceiver" />
    <receiver android:exported="false" android:name="com.dexterous.flutterlocalnotifications.ScheduledNotificationBootReceiver">
        <intent-filter>
            <action android:name="android.intent.action.BOOT_COMPLETED" />
            <action android:name="android.intent.action.MY_PACKAGE_REPLACED" />
            <action android:name="android.intent.action.QUICKBOOT_POWERON" />
            <action android:name="com.htc.intent.action.QUICKBOOT_POWERON" />
        </intent-filter>
    </receiver>
    <provider
        android:name="androidx.work.impl.WorkManagerInitializer"
        android:authorities="${applicationId}.workmanager-init"
        tools:node="remove" />
  </application>
</manifest>
